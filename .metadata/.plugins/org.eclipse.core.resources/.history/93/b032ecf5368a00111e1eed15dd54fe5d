/*
 * pbar.h
 *
 *  Created on: Apr 18, 2012
 *      Author: ACM
 */

#ifndef PBAR_H_
#define PBAR_H_

Packet PBAR_runFunction(Widget* this, u8 funcN, Packet* pack);

typedef struct pbar_widget{
	u32 progressBarX, progressBarY;
}PBarWidget;

struct widget new_PBarWidget(u32 progressBar_x, u32 progressBar_y){

	struct pbar_widget* w = (struct pbar_widget*) malloc(sizeof(PBarWidget));
	w->progressBarX = progressBar_x;
	w->progressBarY = progressBar_y;

	struct widget PBar = {
			.x = 0,
			.y = 0,
			.derive = (const void*)w,
			.runFunction = PBAR_runFunction
	};

	return PBar;
}

Packet PBAR_runFunction(Widget* this, u8 funcN, Packet* pack){

	struct pbar_widget* derive = (struct pbar_widget*)(this->derive);

	switch(funcN){

		case 1:{
			//stuff to draw a progress bar here
			drawCircle(derive->progressBarX,derive->progressBarY,15,BLACK,1);
			drawCircle(derive->progressBarX+200,derive->progressBarY,15,BLACK,1);
			drawRectangle(derive->progressBarX,derive->progressBarY-15,derive->progressBarX+200,derive->progressBarY+15,BLACK,1);
			drawCircle(derive->progressBarX,derive->progressBarY,13,GREEN,1);
			drawDigit(derive->progressBarX-4,derive->progressBarY+17,0,BLACK);
			drawNumber(derive->progressBarX+188,derive->progressBarY+17,100,BLACK);
		}
		case 2:{
			//stuff to draw a progress bar here
			u8 temperature = 0;
			u8 oldTemp = temperature;
			temperature = pack->bytes[0];

			if(oldTemp != temperature)
			{
				drawCircle(derive->progressBarX+200,derive->progressBarY,13,WHITE,1);
				drawRectangle(derive->progressBarX,derive->progressBarY-13,derive->progressBarX+200,derive->progressBarY+13,WHITE,1);
				drawRectangle(derive->progressBarX,derive->progressBarY-13,derive->progressBarX+temperature,derive->progressBarY+13,GREEN,1);
				if (temperature==200)
					drawCircle(derive->progressBarX+200,derive->progressBarY,13,GREEN,1);
			}
		}
	}

}


#endif /* PBAR_H_ */
