/*
 * Empty C++ Application
 */

#include "Graphics.h"
#include "Add.h"
#include "xbasic_types.h"
#include "xuartlite_l.h"
#include "xparameters.h"


	int main()
	{
		int x = 0;
		int y = 215;
		int circleX = 55, circleY = 55;
		int progressBarX = 25, progressBarY = 150;
		u8 color = 1;
		volatile int delayCounter = 0;
		XUartLite_SendByte(XPAR_UARTLITE_1_BASEADDR, 128);

		for (x = 0; x<MAX_WIDTH; ++x)
			for (y = 0; y<MAX_HEIGHT; ++y)
				Xil_Out32(VGA_BASEADDR, ((y*384 + x)<<3)| (7));


		drawCircle(circleX,circleY,50,BLACK,1);
		drawCircle(circleX,circleY,48,WHITE,1);
		for(double i = 0; i <= 6.2831853; i += (3.14159269/12)){
			drawLine(circleX,circleY,(int)(circleX+48*cos(i)),(int)(circleY+48*sin(i)),BLACK);
		}

		//stuff to draw a progress bar here
		drawCircle(progressBarX,progressBarY,15,BLACK,1);
		drawCircle(progressBarX+200,progressBarY,15,BLACK,1);
		drawRectangle(progressBarX,progressBarY-15,progressBarX+200,progressBarY+15,BLACK,1);
		drawCircle(progressBarX,progressBarY,13,GREEN,1);

		//Lights
		drawCircle(125,30, 10, BLACK, 1);
		drawCircle(155,30, 10, BLACK, 1);
		drawCircle(155,60, 10, BLACK, 1);
		drawCircle(125,60, 10, BLACK, 1);

		//draw test digits
		for (int i = 0; i<10; ++i)
			drawDigit(20+i*8,190,i,BLACK);

		drawNumber(20, 205,543210, CYAN);

		while (1==1)
		{

			//stuff to draw a round meter
			u8 degree;
			u8 oldDegree = degree;
			degree = XUartLite_RecvByte(XPAR_UARTLITE_1_BASEADDR);
			if(oldDegree != degree){
			double angle = ((double)degree) * 3.14159/180.0;
			//print("Starting to draw RoundMeter.");
			int x2 = 43*cos(angle) + circleX;
			//int y2 = y + 45*( angle - (angle*angle*angle)/6.0 + (angle*angle*angle*angle*angle)/120.0 - (angle*angle*angle*angle*angle*angle*angle)/5040);
			int y2 = -43*sin(angle) + circleY;

			int deltaX = 6*cos(angle + (3.14/2));
			int deltaY = -6*sin(angle + (3.14/2));

			drawCircle(circleX,circleY,44,WHITE,1);
			drawCircle(circleX,circleY,5,BLUE,1);

			drawTriangle(x2, y2, (circleX+deltaX),(circleY+deltaY),(circleX-deltaX),(circleY-deltaY),BLUE, 1);
			drawLine(circleX,circleY,x2,y2,RED);
			}

			//stuff to draw a progress bar here
			u8 temperature;
			u8 oldTemp = temperature;
			temperature = XUartLite_RecvByte(XPAR_UARTLITE_1_BASEADDR);
			if(oldTemp != temperature){
			drawCircle(progressBarX+200,progressBarY,13,WHITE,1);
			drawRectangle(progressBarX,progressBarY-13,progressBarX+200,progressBarY+13,WHITE,1);
			drawRectangle(progressBarX,progressBarY-13,progressBarX+temperature,progressBarY+13,GREEN,1);
			}
			if (temperature==200)
				drawCircle(progressBarX+200,progressBarY,13,GREEN,1);

			//stuff to draw some lights here
			u8 buttons;
			buttons = XUartLite_RecvByte(XPAR_UARTLITE_1_BASEADDR);
			unsigned int light_1 = buttons & 0x01;
			unsigned int light_2 = buttons & 0x02;
			unsigned int light_3 = buttons & 0x04;
			unsigned int light_4 = buttons & 0x08;
			if(light_1){

				drawCircle(125,30, 8, RED, 1);
				}else{
				drawCircle(125, 30, 8, WHITE, 1);
			}
			if(light_2){
				drawCircle(155, 30, 8, RED, 1);
			}else{
				drawCircle(155, 30, 8, WHITE, 1);
			}
			if(light_3){
				drawCircle(125, 60, 8, RED, 1);
			}else{
				drawCircle(125, 60, 8, WHITE, 1);
			}
			if(light_4){
				drawCircle(155, 60, 8, RED, 1);
			}else{
				drawCircle(155, 60, 8, WHITE, 1);
			}
		}

	return 0;
}
